{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/table/style/css\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style/css\";\nimport _Modal from \"antd/lib/modal\";\nvar _jsxFileName = \"E:\\\\React\\\\demo1\\\\my-app\\\\src\\\\pages\\\\table\\\\basicTable.js\";\nimport React from 'react';\nimport axios from './../../axios/index';\nimport Utils from './../../utils/utils';\nexport default class BasicTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataSource2: []\n    };\n    this.params = {\n      page: 1\n    };\n\n    this.request = () => {\n      let _this = this;\n\n      axios.ajax({\n        url: '/table/list',\n        data: {\n          params: {\n            page: this.params.page\n          }\n        }\n      }).then(res => {\n        if (res.code == 0) {\n          res.result.list.map((item, index) => {\n            item.key = index;\n          });\n          this.setState({\n            dataSource2: res.result.list,\n            selectedRowKeys: [],\n            selectedRows: null,\n            pagination: Utils.pagination(res, current => {\n              _this.params.page = current;\n              this.request();\n            })\n          });\n        }\n      });\n    };\n\n    this.onRowClick = (record, index) => {\n      let selectKey = [index];\n\n      _Modal.info({\n        title: '信息',\n        content: \"\\u7528\\u6237\\u540D\\uFF1A\".concat(record.userName, \",\\u7528\\u6237\\u7231\\u597D\\uFF1A\").concat(record.interest)\n      });\n\n      this.setState({\n        selectedRowKeys: selectKey,\n        selectedItem: record\n      });\n    };\n\n    this.handleDelete = () => {\n      let rows = this.state.selectedRows;\n      let ids = [];\n      rows.map(item => {\n        ids.push(item.id);\n      });\n\n      _Modal.confirm({\n        title: '删除提示',\n        content: \"\\u60A8\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u8FD9\\u4E9B\\u6570\\u636E\\u5417\\uFF1F\".concat(ids.join(',')),\n        onOk: () => {\n          _message.success('删除成功');\n\n          this.request();\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const data = [{\n      id: '0',\n      userName: 'Jack',\n      sex: '1',\n      state: '1',\n      interest: '1',\n      birthday: '2000-01-01',\n      address: '北京市海淀区奥林匹克公园',\n      time: '09:00'\n    }, {\n      id: '1',\n      userName: 'Tom',\n      sex: '1',\n      state: '1',\n      interest: '1',\n      birthday: '2000-01-01',\n      address: '北京市海淀区奥林匹克公园',\n      time: '09:00'\n    }, {\n      id: '2',\n      userName: 'Lily',\n      sex: '1',\n      state: '1',\n      interest: '1',\n      birthday: '2000-01-01',\n      address: '北京市海淀区奥林匹克公园',\n      time: '09:00'\n    }];\n    data.map((item, index) => {\n      item.key = index;\n    });\n    this.setState({\n      dataSource: data\n    });\n    this.request();\n  } // 动态获取mock数据\n\n\n  render() {\n    const columns = [{\n      title: 'id',\n      key: 'id',\n      dataIndex: 'id'\n    }, {\n      title: '用户名',\n      key: 'userName',\n      dataIndex: 'userName'\n    }, {\n      title: '性别',\n      key: 'sex',\n      dataIndex: 'sex',\n\n      render(sex) {\n        return sex == 1 ? '男' : '女';\n      }\n\n    }, {\n      title: '状态',\n      key: 'state',\n      dataIndex: 'state',\n\n      render(state) {\n        let config = {\n          '1': '咸鱼一条',\n          '2': '风华浪子',\n          '3': '北大才子',\n          '4': '百度FE',\n          '5': '创业者'\n        };\n        return config[state];\n      }\n\n    }, {\n      title: '爱好',\n      key: 'interest',\n      dataIndex: 'interest',\n\n      render(abc) {\n        let config = {\n          '1': '游泳',\n          '2': '打篮球',\n          '3': '踢足球',\n          '4': '跑步',\n          '5': '爬山',\n          '6': '骑行',\n          '7': '桌球',\n          '8': '麦霸'\n        };\n        return config[abc];\n      }\n\n    }, {\n      title: '生日',\n      key: 'birthday',\n      dataIndex: 'birthday'\n    }, {\n      title: '地址',\n      key: 'address',\n      dataIndex: 'address'\n    }, {\n      title: '早起时间',\n      key: 'time',\n      dataIndex: 'time'\n    }];\n    const selectedRowKeys = this.state.selectedRowKeys;\n    const rowSelection = {\n      type: 'radio',\n      selectedRowKeys\n    };\n    const rowCheckSelection = {\n      type: 'checkbox',\n      selectedRowKeys,\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.setState({\n          selectedRowKeys,\n          selectedRows\n        });\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"\\u57FA\\u7840\\u8868\\u683C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: this.state.dataSource,\n      pagination: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      title: \"\\u52A8\\u6001\\u6570\\u636E\\u6E32\\u67D3\\u8868\\u683C-Mock\",\n      style: {\n        margin: '10px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: this.state.dataSource2,\n      pagination: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      title: \"Mock-\\u5355\\u9009\",\n      style: {\n        margin: '10px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true,\n      rowSelection: rowSelection,\n      onRow: (record, index) => {\n        return {\n          onClick: () => {\n            this.onRowClick(record, index);\n          }\n        };\n      },\n      columns: columns,\n      dataSource: this.state.dataSource2,\n      pagination: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      title: \"Mock-\\u5355\\u9009\",\n      style: {\n        margin: '10px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      onClick: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"\\u5220\\u9664\")), React.createElement(_Table, {\n      bordered: true,\n      rowSelection: rowCheckSelection,\n      columns: columns,\n      dataSource: this.state.dataSource2,\n      pagination: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      title: \"Mock-\\u8868\\u683C\\u5206\\u9875\",\n      style: {\n        margin: '10px 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: this.state.dataSource2,\n      pagination: this.state.pagination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["E:\\React\\demo1\\my-app\\src\\pages\\table\\basicTable.js"],"names":["React","axios","Utils","BasicTable","Component","state","dataSource2","params","page","request","_this","ajax","url","data","then","res","code","result","list","map","item","index","key","setState","selectedRowKeys","selectedRows","pagination","current","onRowClick","record","selectKey","info","title","content","userName","interest","selectedItem","handleDelete","rows","ids","push","id","confirm","join","onOk","success","componentDidMount","sex","birthday","address","time","dataSource","render","columns","dataIndex","config","abc","rowSelection","type","rowCheckSelection","onChange","margin","onClick","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Table, Modal, Button, message} from 'antd';\nimport axios from './../../axios/index'\nimport Utils from './../../utils/utils';\nexport default class BasicTable extends React.Component{\n\n    state={\n        dataSource2:[]\n    }\n\n    params = {\n        page:1\n    }\n\n    componentDidMount(){\n        const data = [\n            {\n                id:'0',\n                userName:'Jack',\n                sex:'1',\n                state:'1',\n                interest:'1',\n                birthday:'2000-01-01',\n                address:'北京市海淀区奥林匹克公园',\n                time:'09:00'\n            },\n            {\n                id: '1',\n                userName: 'Tom',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2000-01-01',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            },\n            {\n                id: '2',\n                userName: 'Lily',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2000-01-01',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            },\n        ]\n        data.map((item,index)=>{\n            item.key = index;\n        })\n        this.setState({\n            dataSource: data\n        })\n        this.request();\n    }\n\n    // 动态获取mock数据\n    request = ()=>{\n        let _this = this;\n        axios.ajax({\n            url:'/table/list',\n            data:{\n                params:{\n                    page:this.params.page\n                }\n            }\n        }).then((res)=>{\n            if(res.code == 0){\n                res.result.list.map((item, index) => {\n                    item.key = index;\n                })\n                this.setState({\n                    dataSource2:res.result.list,\n                    selectedRowKeys:[],\n                    selectedRows:null,\n                    pagination: Utils.pagination(res,(current)=>{\n                        _this.params.page = current;\n                        this.request();\n                    })\n                })\n            }\n        })\n    }\n\n    onRowClick = (record,index)=>{\n        let selectKey = [index];\n        Modal.info({\n            title:'信息',\n            content:`用户名：${record.userName},用户爱好：${record.interest}`\n        })\n        this.setState({\n            selectedRowKeys:selectKey,\n            selectedItem: record\n        })\n    }\n\n    // 多选执行删除动作\n    handleDelete = (()=>{\n        let rows = this.state.selectedRows;\n        let ids = [];\n        rows.map((item)=>{\n            ids.push(item.id)\n        })\n        Modal.confirm({\n            title:'删除提示',\n            content: `您确定要删除这些数据吗？${ids.join(',')}`,\n            onOk:()=>{\n                message.success('删除成功');\n                this.request();\n            }\n        })\n    })\n\n    render(){\n        const columns = [\n            {\n                title:'id',\n                key:'id',\n                dataIndex:'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render(sex){\n                    return sex ==1 ?'男':'女'\n                }\n            },\n            {\n                title: '状态',\n                key: 'state',\n                dataIndex: 'state',\n                render(state){\n                    let config  = {\n                        '1':'咸鱼一条',\n                        '2':'风华浪子',\n                        '3':'北大才子',\n                        '4':'百度FE',\n                        '5':'创业者'\n                    }\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render(abc) {\n                    let config = {\n                        '1': '游泳',\n                        '2': '打篮球',\n                        '3': '踢足球',\n                        '4': '跑步',\n                        '5': '爬山',\n                        '6': '骑行',\n                        '7': '桌球',\n                        '8': '麦霸'\n                    }\n                    return config[abc];\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                key: 'address',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time'\n            }\n        ]\n        const selectedRowKeys = this.state.selectedRowKeys;\n        const rowSelection = {\n            type:'radio',\n            selectedRowKeys\n        }\n        const rowCheckSelection = {\n            type: 'checkbox',\n            selectedRowKeys,\n            onChange:(selectedRowKeys,selectedRows)=>{\n                this.setState({\n                    selectedRowKeys,\n                    selectedRows\n                })\n            }\n        }\n        return (\n            <div>\n                <Card title=\"基础表格\">\n                    <Table \n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"动态数据渲染表格-Mock\" style={{margin:'10px 0'}}>\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"Mock-单选\" style={{ margin: '10px 0' }}>\n                    <Table\n                        bordered\n                        rowSelection={rowSelection}\n                        onRow={(record,index) => {\n                            return {\n                                onClick:()=>{\n                                    this.onRowClick(record,index);\n                                }\n                            };\n                        }}\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"Mock-单选\" style={{ margin: '10px 0' }}>\n                    <div style={{marginBottom:10}}>\n                        <Button onClick={this.handleDelete}>删除</Button>\n                    </div>\n                    <Table\n                        bordered\n                        rowSelection={rowCheckSelection}\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"Mock-表格分页\" style={{ margin: '10px 0' }}>\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={this.state.pagination}\n                    />\n                </Card>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}